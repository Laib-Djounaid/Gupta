# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gupta.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Algo import gupta


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(852, 292)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 90, 161, 16))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 130, 171, 16))
        self.label_2.setObjectName("label_2")
        self.spinBox = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox.setGeometry(QtCore.QRect(220, 90, 42, 22))
        self.spinBox.setObjectName("spinBox")
        self.spinBox.valueChanged.connect(self.show_result)
        self.spinBox_2 = QtWidgets.QSpinBox(self.centralwidget)
        self.spinBox_2.setGeometry(QtCore.QRect(220, 130, 42, 22))
        self.spinBox_2.setObjectName("spinBox_2")
        self.spinBox_2.valueChanged.connect(self.show_result)
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(20, 40, 201, 16))
        self.label_3.setObjectName("label_3")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(90, 190, 75, 24))
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.grouping)
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(300, 10, 521, 231))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 852, 22))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Heuristique GUPTA pour Fi||C_max"))
        self.label.setText(_translate("MainWindow", "Donnez le nombre de taches"))
        self.label_2.setText(_translate("MainWindow", "Donnez le nombre de machines"))
        self.label_3.setText(_translate("MainWindow", "Bienvenue dans l\'heuristique GUPTA"))
        self.pushButton.setText(_translate("MainWindow", "Confirmer"))
    
    def show_result(self):
        # getting current value
        value = self.spinBox.value()
        value2 = self.spinBox_2.value()
        # setting value of spin box to the label
        self.tableWidget.setColumnCount(value)
        self.tableWidget.setRowCount(value2)

    #Recuperation des valeurs en entree de l'interface
    def grouping(self):
        nrows = self.tableWidget.rowCount()
        ncol = self.tableWidget.columnCount()
        col_group = []
        group = []
        group_normal = []

        for col in range(ncol):
            for row in range(nrows):
                item = self.tableWidget.item(row, col)
                item_text = item.text()
                col_group.append(item_text)
            group.append(col_group)
            col_group=[]

        for row in range(nrows):
            for col in range(ncol):
                item = self.tableWidget.item(row,col)
                item_text = item.text()
                col_group.append(item_text)
            group_normal.append(col_group)
            col_group=[]
           
        
            
        if nrows<2 or  ncol<2:
            print("Il faut qu'il y ait au moins 2 Taches et 2 Machines")
        else :
            for row in group :
                for i in range(len(row)):
                    row[i]=int(row[i])
                    
            
            for row in group_normal :
                for i in range(len(row)):
                    row[i]=int(row[i])
                
            dic_valeurs , c_max = gupta(group,group_normal)
            print(dic_valeurs)
            print("C_max= "+c_max)
        # print(group)
        # print('\n')
        # print(group_normal)
        
    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
